{"version":3,"file":"main.js","mappings":"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","sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/nav-bar/nav-bar.component.ts","./src/app/nav-bar/nav-bar.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path : 'Products',\n    loadChildren : () => import('./products/products.module').then( m => (m.ProductsModule))\n  },\n  {\n    path : '',\n    loadChildren : () => import('./home/home.module').then( m => (m.HomeModule))\n  },\n  {\n    path : 'whyus',\n    loadChildren : () => import('./why-us/why-us.module').then( m => (m.WhyUsModule))\n  },\n  {\n    path : 'contact',\n    loadChildren : () => import('./contact/contact.module').then( m => (m.ContactModule))\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'GokulMills2021';\n}\n","<app-nav-bar></app-nav-bar>\n\n<div>\n  <!-- <a routerLink=\"/Products\" routerLinkActive=\"active\" class=\"item\">Products</a> -->\n</div>\n\n<div >\n  <router-outlet></router-outlet>\n</div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavBarComponent } from './nav-bar/nav-bar.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavBarComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.css']\n})\nexport class NavBarComponent implements OnInit {\n\n  app=[] as any;\n  btns=[] as any;\n  public href: string = \"\";\n  // el: any;\n\n  currentChoice: string = \"home\";\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n    this.href = this.router.url;\n    \n    // console.log(\"1>>>\"+this.router.url);\n    // console.log(\"1>>>\"+window.location.href);\n  }\n\n  \n \n\n  setActive(choice: string): void{\n      // console.log(\"1>>\"+this.currentChoice);\n      // this.href = window.location.href;\n      // console.log(\"2>>>\"+this.href);\n      this.currentChoice = choice;\n      // console.log(\"2>>\"+this.currentChoice);\n  }\n\n  getActive(choice: string) : string{\n      if(this.currentChoice == choice)\n           return \"item active\";\n      else\n           return \"item\";\n  }\n  \n\n}\n","<div class=\"container-fluid\" style=\"padding:10px;background-color: #555;height:80px;\">\r\n    <div class=\"logo-div\">\r\n        <img src=\"../../assets/images/logo1.jpg\" class=\"logo\">\r\n        <!-- <h5>Gokul Mills</h5> -->\r\n    </div> \r\n    <div class=\"topnav\" id=\"topnav\">\r\n        <a routerLinkActive=\"active\" \r\n        (click)=\"setActive('home')\" \r\n        class=\"{{getActive('home')}}\" \r\n        href=\"#\" routerLink=\"/\">Home</a>\r\n        <a href=\"#\" routerLink=\"/whyus\" routerLinkActive=\"active\" \r\n        (click)=\"setActive('why_us')\" \r\n        class=\"{{getActive('why_us')}}\" \r\n         >Why Us?</a> \r\n        <a href=\"#\" routerLink=\"/Products\" routerLinkActive=\"active\" \r\n        (click)=\"setActive('products')\" \r\n        class=\"{{getActive('products')}}\" \r\n         >Products</a>\r\n        <a href=\"#\" routerLink=\"/contact\" routerLinkActive=\"active\" \r\n        (click)=\"setActive('contact')\" \r\n        class=\"{{getActive('contact')}}\" \r\n        >Contact</a>\r\n    </div>   \r\n</div>\r\n<!-- <nav class=\"navbar navbar-default navbar-fixed-top\">\r\n    <div class=\"container-fluid\">\r\n        \r\n    </div>\r\n</nav> -->\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///"}